version: '3'

services:

    app:
        build: .
        container_name: micro-videos-app
        entrypoint: dockerize -template ./.docker/app/.env:.env -template ./.docker/app/.env.testing:.env.testing -wait tcp://db:3306 -timeout 40s ./.docker/entrypoint.sh
        environment:
            - _DB_HOST=db
            - _DB_DATABASE=code_micro_videos
            - _DB_USERNAME=root
            - _DB_PASSWORD=root
            - _TEST_DB_DATABASE=code_micro_videos_test

        volumes:
            - .:/var/www
        networks:
            - app-network
        depends_on:
            - db
            - redis

    nginx:
        build: .docker/nginx
        container_name: micro-videos-nginx
        restart: always
        tty: true
        ports:
            - "8090:80"
        volumes:
            - .:/var/www
        networks:
            - app-network
        depends_on:
            - app

    db:
        build: ./.docker/mysql
        command: --innodb-use-native-aio=0
        container_name: micro-videos-db
        restart: always
        tty: true
        ports:
            - "33006:3306"
        volumes:
            - ./.docker/dbdata:/var/lib/mysql
            - ./.docker/mysql:/docker-entrypoint-initdb.d
        environment:
            - MYSQL_DATABASE=code_micro_videos
            - MYSQL_ROOT_PASSWORD=root
            - MYSQL_USER=root
        networks:
            - app-network

    redis:
        image: redis:alpine
        container_name: micro-videos-redis
        expose:
            - 6379
        networks:
            - app-network

    phpmyadmin:
      image: phpmyadmin/phpmyadmin:latest
      container_name: private_phpmyadmin
      ports:
        - 8001:80
      volumes:
        - ./.docker/phpmyadmin/php-fpm.conf:/etc/php-fpm.conf
        - ./.docker/phpmyadmin/php.ini:/etc/php.ini
        - ./.docker/phpmyadmin/config.user.inc.php:/etc/phpmyadmin/config.user.inc.php
      environment:
        PMA_ARBITRARY: 1
        PMA_HOST: mysql
        PMA_USER: root
        PMA_PASSWORD: root
        UPLOAD_LIMIT: 1G
      restart: always
      networks:
        - app-network

    mongo:
      image: mongo
      container_name: private_mongo
      ports:
        - '27017:27017'
      networks:
        - app-network

    mongoclient:
      image: mongoclient/mongoclient:latest
      container_name: private_mongoclient
      hostname: mongoclient
      depends_on:
        - mongo
      ports:
        - 3300:3000
      networks:
        - app-network


networks:
    app-network:
        driver: bridge
